@using System.Web.UI.WebControls
@using Battlegrid.ru.Models
@model AllPostsModel


@{
    ViewBag.Title = "Блог";
    var auth = false;
}

@if (Request.IsAuthenticated)
{
    auth = true;
}
<dl class="container">

    @if (auth && User.IsInRole("admin"))
    {
        <ul class="nav navbar-nav mt-3">
            <li class="col-2"></li>
            <li class="row">@Html.ActionLink("Новый пост", "NewPost", "Blog", null, new {@class = "mx-2 btn btn-success "})</li>
            <li class="col-2"></li>
        </ul>
    }
    <br/>
    <h2 class="">Блог разработки <span class="badge badge-secondary">Blog</span></h2>
    <br/>
    <div class="list-group">
        @foreach (var post in Model.AllPosts)
        {
            <div class="card mb-3">
                @{
                    string postId = string.Join("", "ID", @post.Id);
                }
                <img src="@post.ImageUrl" class="card-img-top h-100" alt="@post.Label">
                <div class="float-lg-right justify-content-end">
                    @if (Model.AllAuthors.FirstOrDefault(p => p.Id == post.Author) != null)
                    {
                        <small class="badge badge-dark p-2 m-2">
                            @Model.AllAuthors.First(p => p.Id == post.Author).UserName
                        </small>

                    }
                    else
                    {
                        <small class="badge badge-dark p-2 m-2">Deleted</small>
                    }
                </div>
                <div class="card-body">
                    <h5 class="card-title">@post.Label</h5>
                    <p class="card-text">@post.Text</p>
                    <p class="card-text">
                        <small class="text-muted">@post.CreationTime.ToString("MM.MM hh:mm")</small><small class="text-danger"> Likes(@post.Likes) </small><small class="text-muted"> Views(@post.Views) </small>
                    </p>
                </div>
                <div class="container mb-2">
                    @Html.ActionLink("Write comment", "WriteComment", "Blog", new {postId = post.Id}, new {@class = "btn btn-secondary", role = "button", type = "button"})
                    <button type="button" class="btn btn-secondary dropdown-toggle dropdown-toggle-split" data-toggle="collapse" data-target="#@postId" aria-controls="@postId" aria-haspopup="true" aria-expanded="false">
                        Comments <span class="sr-only">Toggle Dropdown</span>
                    </button>
                    <div class="collapse" id="@postId" >
                        <h6 class="h3">Comments</h6>
                        @foreach (var comment in post.Comments)
                        {
                            <div class="alert alert-secondary">
                                @if (Model.AllAuthors.FirstOrDefault(a => a.Id == comment.Author) != null)
                                {<span class="badge badge-dark p-2 m-2">@Model.AllAuthors.First(a => a.Id == comment.Author).UserName</span>
                                }
                                else
                                {<span class="badge badge-dark p-2 m-2">Deleted</span>
                                }
                            <p> @comment.Body</p>
                                <small>@comment.CreationTime Views:@comment.Views Likes:@comment.Likes</small>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <br/>
        }
    </div>

</dl>